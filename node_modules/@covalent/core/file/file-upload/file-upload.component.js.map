{"version":3,"file":"file-upload.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/file/file-upload/file-upload.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '../../common/common.module';\n\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\n\nexport class TdFileUploadBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinDisabled(TdFileUploadBase);\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-file-upload',\n  inputs: ['disabled'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  files: FileList | File;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.files) {\n      this.onUpload.emit(this.files);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.files = files;\n    this.onSelect.emit(files);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.files = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n"]}