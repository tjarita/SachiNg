{"version":3,"file":"file-input.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/file/file-input/file-input.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled } from '../../common/common.module';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport const FILE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdFileInputComponent),\n  multi: true,\n};\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinDisabled(TdFileInputBase);\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ FILE_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-file-input',\n  inputs: ['disabled'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements ControlValueAccessor, ICanDisable {\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  private _value: FileList | File = undefined;\n\n  // get/set accessor (needed for ControlValueAccessor)\n  get value(): FileList | File { return this._value; }\n  set value(v: FileList | File) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onChange = (_: any) => noop;\n  onTouched = () => noop;\n\n}\n"]}