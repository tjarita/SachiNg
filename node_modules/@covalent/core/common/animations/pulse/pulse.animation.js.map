{"version":3,"file":"pulse.animation.js","sourceRoot":"","sources":["../../../../../../src/platform/core/common/animations/pulse/pulse.animation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAwC,MAAM,qBAAqB,CAAC;AAGlI;;;;;;;;;;GAUG;AACH,MAAM,2BAA2B,YAAoC;IAApC,6BAAA,EAAA,iBAAoC;IACnE,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI,SAAS,EAAE;QAC/C,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC;YACf,SAAS,EAAE,kBAAkB;SAC9B,CAAC,CAAC;QACH,KAAK,CAAC,GAAG,EAAG,KAAK,CAAC;YAChB,SAAS,EAAE,kBAAkB;SAC9B,CAAC,CAAC;QACH,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,YAAY,CAAC,QAAQ,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,SAAS,CAAC;YAC/G,KAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;YACjD,KAAK,CAAC,EAAC,SAAS,EAAE,2BAA2B,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC;YAC5D,KAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC;SACtD,CAAC,CAAC,CAAC;KACL,CAAC,CAAC;AACL,CAAC","sourcesContent":["\nimport { trigger, state, style, keyframes, transition, animate, AnimationTriggerMetadata, AUTO_STYLE } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * Function TdPulseAnimation\n *\n * params:\n * * anchor: Name of the anchor that will attach to a dom element in the components template that will contain the animation.\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n *\n * Returns an [AnimationTriggerMetadata] object with states for a boolean trigger based pulse animation.\n *\n * usage: [@myAnchorName]=\"true|false\"\n */\nexport function TdPulseAnimation(pulseOptions: IAnimationOptions = {}): AnimationTriggerMetadata {\n  return trigger(pulseOptions.anchor || 'tdPulse', [\n    state('0', style({\n      transform: 'scale3d(1, 1, 1)',\n    })),\n    state('1',  style({\n      transform: 'scale3d(1, 1, 1)',\n    })),\n    transition('0 <=> 1', animate((pulseOptions.duration || 500) + 'ms ' + (pulseOptions.delay || 0) + 'ms', keyframes([\n        style({transform: 'scale3d(1, 1, 1)', offset: 0}),\n        style({transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5}),\n        style({transform: 'scale3d(1, 1, 1)', offset: 1.0}),\n    ]))),\n  ]);\n}\n"]}